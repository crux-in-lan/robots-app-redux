{"ast":null,"code":"import _classCallCheck from \"/home/nikola/github/robots-app-redux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nikola/github/robots-app-redux/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nikola/github/robots-app-redux/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nikola/github/robots-app-redux/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nikola/github/robots-app-redux/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nikola/github/robots-app-redux/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"../logo.svg\";\nimport './App.css';\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/CardList';\nimport Scrollable from '../components/Scrollable';\nimport ErrorBondry from './ErrorBondry';\nimport { connect } from 'react-redux';\nimport { setSearchField, setRobots } from '../redux/actions';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    searchField: state.searchRobots.searchField,\n    isPending: state.requestRobots.isPending,\n    robots: state.requestRobots.robots,\n    error: state.requestRobots.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSearchChange: function onSearchChange(event) {\n      return dispatch(setSearchField(event.target.value));\n    },\n    onRobotRequest: function onRobotRequest() {\n      return setRobots(dispatch);\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.componentDidMount = function () {\n      _this.props.onRobotRequest();\n    };\n\n    _this.state = {\n      robots: []\n    };\n    return _this;\n  } // onSearchChange = (event) => {\n  //   this.setState({searchField: event.target.value});\n  // }\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var filteredRobots = this.state.robots.filter(function (robot) {\n        return robot.name.includes(_this2.props.searchField) || robot.email.includes(_this2.props.searchField);\n      });\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(SearchBox, {\n        onSearchChange: this.props.onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Scrollable, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(ErrorBondry, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        filteredRobots: filteredRobots,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/nikola/github/robots-app-redux/src/containers/App.js"],"names":["React","Component","SearchBox","CardList","Scrollable","ErrorBondry","connect","setSearchField","setRobots","mapStateToProps","state","searchField","searchRobots","isPending","requestRobots","robots","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRobotRequest","App","componentDidMount","props","filteredRobots","filter","robot","name","includes","email"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,EAAwBC,SAAxB,QAAwC,kBAAxC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD3B;AAELE,IAAAA,SAAS,EAAEH,KAAK,CAACI,aAAN,CAAoBD,SAF1B;AAGLE,IAAAA,MAAM,EAAEL,KAAK,CAACI,aAAN,CAAoBC,MAHvB;AAILC,IAAAA,KAAK,EAAEN,KAAK,CAACI,aAAN,CAAoBE;AAJtB,GAAP;AAMD,CAPD;;AASA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLC,IAAAA,cAAc,EAAE,wBAACC,KAAD;AAAA,aAAWF,QAAQ,CAACX,cAAc,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAAnB;AAAA,KADX;AAELC,IAAAA,cAAc,EAAE;AAAA,aAAMf,SAAS,CAACU,QAAD,CAAf;AAAA;AAFX,GAAP;AAID,CALD;;IAOMM,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;;AADY,UAWdC,iBAXc,GAWM,YAAM;AACxB,YAAKC,KAAL,CAAWH,cAAX;AACD,KAba;;AAEZ,UAAKb,KAAL,GAAa;AACXK,MAAAA,MAAM,EAAE;AADG,KAAb;AAFY;AAKb,G,CAED;AACA;AACA;;;;;6BAMS;AAAA;;AACP,UAAMY,cAAc,GAAG,KAAKjB,KAAL,CAAWK,MAAX,CAAkBa,MAAlB,CAAyB,UAAAC,KAAK,EAAI;AACvD,eAAQA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoB,MAAI,CAACL,KAAL,CAAWf,WAA/B,KACNkB,KAAK,CAACG,KAAN,CAAYD,QAAZ,CAAqB,MAAI,CAACL,KAAL,CAAWf,WAAhC,CADF;AAED,OAHsB,CAAvB;AAIA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,cAAc,EAAE,KAAKe,KAAL,CAAWP,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,QAAD;AAAU,QAAA,cAAc,EAAEQ,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CADD,CAFF,CADF;AAUD;;;;EA/Be1B,S;;AAkClB,eAAeK,OAAO,CAACG,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from '../logo.svg';\nimport './App.css';\nimport SearchBox from '../components/SearchBox';\nimport CardList from '../components/CardList';\nimport Scrollable from '../components/Scrollable';\nimport ErrorBondry from './ErrorBondry';\nimport {connect} from 'react-redux';\nimport {setSearchField, setRobots} from '../redux/actions';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    isPending: state.requestRobots.isPending,\n    robots: state.requestRobots.robots,\n    error: state.requestRobots.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRobotRequest: () => setRobots(dispatch)\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    }\n  }\n\n  // onSearchChange = (event) => {\n  //   this.setState({searchField: event.target.value});\n  // }\n\n  componentDidMount = () => {\n    this.props.onRobotRequest();\n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return (robot.name.includes(this.props.searchField) ||\n        robot.email.includes(this.props.searchField))\n    });\n    return (\n      <div className=\"App\">\n        <SearchBox onSearchChange={this.props.onSearchChange}/>\n        <Scrollable>\n         <ErrorBondry>\n            <CardList filteredRobots={filteredRobots}/>\n          </ErrorBondry>\n        </Scrollable>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}